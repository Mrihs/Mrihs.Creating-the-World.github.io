---
title: "35. Welten"
editor: visual
---

::: column-margin
Verwendung von Licht beim Rendern
:::

Mithilfe der Lichtobjekte ist es nun möglich, die Szenen in Blender mit Licht auszustatten. Damit der Einfluss dieser Lichtobjekte sichtbar ist, muss allerdings der Rendered-Viewport-Shading-Modus im 3D-Viewport-Editor ausgewählt werden. Im Material-Preview-Viewport-Shading-Modus werden diese Lichtobjekte per Default nicht mit angezeigt.

![Eine gerenderte Szene.](Images/Chapter_35/.png){#fig-1_1 fig-align="left"}

::: column-margin
Der gerenderte Hintergrund
:::

Die Abbildung 1, welche auch in der Datei «*Dune*» zu finden ist, zeigt eine gerenderte Szene, so wie sie auch im Rendered-Viewport-Shading-Modus dargestellt wird. Das Objekt zeigt eine Düne mit einer Sandtextur, welche von einer Sonne beleuchtet wird. Dahinter verbirgt sich ein leerer, grauer Hintergrund. Dabei handelt es sich um den Standardhintergrund, der in einer Szene per Default eingestellt ist. Dieser Hintergrund bildet die sogenannte Welt der Szene ab.

::: column-margin
Die Unendlichkeit der Welt
:::

Die Welt stellt im Grunde genommen eine unendlich grosse Kugel dar, welche um die Szene gespannt wird. Das Ende dieser Welt kann somit nie erreicht werden. Man könnte sich dies auch als eine UV-Sphere vorstellen, welche so stark vergrössert wird, dass sie die gesamte Szene in sich beheimatet. Im Unterschied zur Welt, wäre die UV-Sphere allerdings endlich, da sie einen klar definierten Durchmesser innehat, welcher die Szene umfasst. Die Welt hingegen, stellt ein unendliches Konstrukt dar.

::: column-margin
World-Properties
:::

Für die Einstellung der Welt findet sich im Properties-Editor unter dem Reiter «*World Properties*» die Möglichkeit, Eigenschaften der Welt zu definieren. Allerdings kann diese Einstellung der Welt auch im Shader-Editor vorgenommen werden. Im Shader-Editor können nicht nur Materialien, sondern auch die Welt und Linien bearbeitet werden.

![Icon des «*World Properties*»-Reiters im Properties-Editor.](Images/Chapter_35/1.%20Icon_World_Properties.png){#fig-1_2 fig-align="left"}

::: column-margin
Weltbearbeitung im Shader-Editor öffnen
:::

In der linken oberen Ecke des Shader-Editors, direkt neben dem Dropdown-Menü zur Auswahl des Editors, findet sich ein weiteres Dropdown-Menü, welches standardmässig auf «*Object*» eingestellt ist. Unter dieser Auswahl werden jeweils die Materialien des Objekts dargestellt und bearbeitet. Wird im entsprechenden Dropdown-Menü allerdings «*World*» ausgewählt, werden die Einstellungen der Welt dargestellt und können bearbeitet werden.

::: column-margin
Background-Node
:::

Standardmässig wird für die Welt der «*Background*»-Shader verwendet. Dieser verfügt lediglich über die Einstellungen «*Color*» und «*Strength*». Bei der Farbe handelt es sich um die Hintergrundfarbe, welche in der gerenderten Ansicht dargestellt wird. Diese Farbe sendet zudem auch Lichtstrahlen aus. Das Ausmass, in dem Licht ausgestrahlt werden soll, kann mit der Einstellung «*Strength*» definiert werden. Indem diese beiden Parameter variiert werden, können bereits unterschiedliche Hintergrundbeleuchtungen erzielt werden.

## HDRIs hinzufügen

::: column-margin
HDRI
:::

Welten können, so wie auch bei Materialien, Texturen hinzugefügt werden. Dabei werden allerdings in der Regel besondere Arten von Texturen verwendet, sogenannte HDRIs. HDRI steht für «High Dynamic Range Image» und beschreibt Bilder, welche sehr hohe Helligkeitsunterschiede innerhalb des Bildes aufweisen. Dies ist besonders zur Darstellung von Welten geeignet.

::: column-margin
HDRIs im Internet beziehen
:::

HDRIs können so wie auch Texturen im Internet bezogen werden. Teilweise bieten die Datenbanken, welche Texturen anbieten, in einer gesonderten Kategorie zusätzlich HDRIs an. Etwa die Webseiten <https://polyhaven.com/> und <https://ambientcg.com/> beinhalten gesonderte Kategorien für HDRIs. Oftmals werden verschiedene Auflösungen angeboten. Bei den HDRIs, welche für die Hintergrundwelt verwendet werden, empfiehlt es sich, eine etwas grössere Auflösung zu verwenden, da die entsprechenden Bilder anschliessend über die gesamte Welt gezogen werden.

::: column-margin
HDRI in Blender einfügen
:::

Die HDRIs können nun im Shader-Editor als Textur hinzugefügt werden. Hierfür kann der Background-Shader-Node ausgewählt werden und die Tastenkombination {{< kbd Ctrl >}} + {{< kbd T >}} gedrückt werden. Dadurch werden automatisch ein Texture-Node, ein Mapping-Node und ein Texture-Coordinate-Node hinzugefügt. Anders als bei den Materialien wird allerdings kein Image-Texture-Node hinzugefügt, sondern ein Environment-Texture-Node. Dieser fungiert ähnlich wie der Image-Texture-Node, ist allerdings darauf angepasst, dass er die runde Welt überspannt, statt ein Objekt. Im «*Add*»-Menü kann dieser Node unter «*Texture \| Environment Texture*» hinzugefügt werden. Innerhalb dieses Environment-Texture-Nodes kann anschliessend das HDRI-Bild geöffnet werden.

::: column-margin
Welten rotieren und verschieben
:::

Abbildung 3 zeigt eine gerenderte Szene, deren Welt auf einem HDRI basiert. Hierfür wurde das HDRI «*Sky-Only HDRI 009*» von der Website <https://ambientcg.com/> verwendet. Mittels des Mapping-Nodes kann die Welt zusätzlich angepasst werden. Durch eine Rotation entlang der Z-Achse kann die Textur etwa innerhalb der Szene gedreht werden, oder mittels einer Veränderung der Position entlang der Z-Achse kann der Horizont in der Höhe etwas verschoben werden.

![Eine gerenderte Szene mit einem HDRI-Bild als Welt.](Images/Chapter_35/.png){#fig-1_3 fig-align="left"}

## Einen prozeduralen Sternenhimmel erstellen

::: column-margin
Prozedurale Welten erstellen
:::

Welten können, so wie bereits bei den Texturen betrachtet, auch prozedural aufgebaut werden. So kann etwa ein Sternenhimmel erstellt werden, ohne dass eine Bilddatei dafür benötigt wird. Abbildung 4 zeigt ein Beispiel für eine gerenderte Szene, die im Hintergrund einen solchen prozedural erstellen Sternenhimmel beinhaltet.

::: column-margin
Noise-Textur hinzufügen
:::

Um einen solchen Effekt zu erzielen, kann eine Noise-Textur verwendet werden. Diese kann im «*Add*»-Menü des Shader-Editors unter «*Texture \| Noise Texture*» hinzugefügt werden. Diese Noise Textur kann anschliessend ausgewählt werden und mittels der Tastenkombination {{< kbd Ctrl >}} + {{< kbd T >}} ein Mapping- und ein Texture-Coordinate-Node hinzugefügt werden. Die Noise-Textur erzeugt ein zufälliges schwarz-weisses Bild, bestehend aus Noise.

![Eine gerenderte Szene mit einem prozedural erstellten Sternenhimmel als Hintergrundwelt.](Images/Chapter_35/.png){#fig-1_4 fig-align="left"}

::: column-margin
Parameter des Noise-Texture-Nodes
:::

Der Noise-Texture-Node beinhaltet verschiedene Möglichkeiten, um bearbeitet zu werden. Die entsprechenden Parameter sind:

-   «***Scale***»: Wie stark soll das resultierende Bild mit dem Noise skaliert werden? Je grösser der Wert, desto grösser wird das dargestellte Bild und desto detaillierter werden die dargestellten Inhalte. Gleichzeitig benötigt ein höherer Wert allerdings auch mehr Leistung.
-   «***Detail***»: Mittels des Detail-Parameters kann definiert werden, dass der Noise detaillierter dargestellt wird. Auch dies geht zulasten der Computerleistung.
-   «***Roughness***»: Mittels der Roughness-Einstellung kann definiert werden, wie sehr die Übergänge des Noises ineinander überfliessen sollen. Je höher der Roughness-Wert, desto weicher und fliessender werden die Übergänge.
-   «***Distortion***»: Mittels des Distortion-Parameters kann der Noise zusätzlich verzogen werden. Je höher dieser Wert, desto mehr wird der Noise verzogen.

::: column-margin
4D-Option, um mittels des W-Werts den Noise zu variieren
:::

Zusätzlich verfügt der Noise-Texture-Node über ein Dropdown-Menü, mit dem eine Dimensionalität der Noise-Textur ausgewählt werden kann. In der Regel wird die Option «*3D*» ausgewählt. Die Option «*4D*» hat allerdings den Vorteil, dass ein zusätzliches «*W*» im Noise-Texture-Node hinzugefügt wird. Mithilfe dieses Parameters kann zwischen verschiedenen Abstufungen des Noises gewählt werden. Dadurch können unkompliziert andere Ergebnisse in dem prozedural erstellten Sternenhimmel erzielt werden, lediglich indem dieser Parameter variiert wird.

Für das Beispiel aus der Abbildung 4 wurde die Dimensionalität «*4D*» verwendet und der Parameter «*W*» auf 15.2 eingestellt. Zudem wurde der Faktor «*Scale*» auf den Wert 10 und die «*Roughness*» auf 1 erhöht. Im Mapping-Node wurde die Skalierung ebenfalls auf den Wert 15 entlang aller drei Achsen erhöht.

::: column-margin
Color-Ramp hinzufügen
:::

Um den Noise der Noise-Textur nun in einen Sternenhimmel zu verwandeln, wird eine Color-Ramp benötigt. Diese ist im «*Add*»-Menü unter «*Converter \| ColorRamp*» zu finden. Der Fac-Output des Noise-Texture-Nodes kann anschliessend mit dem Fac-Input des Color-Ramp-Nodes verbunden werden.

::: column-margin
Wieso wird der Fac-Output der Noise-Textur verwendet?
:::

Der Noise-Texture-Node kann sowohl farbigen Noise als auch schwarz-weissen Noise erzeugen. Mittels des Color-Outputs kann die farbige Version des Noises verwendet werden, mittels des Fac-Outputs kann die schwarz-weisse Version des Noises verwendet werden. Die schwarz-weisse Version des Noises hat den Vorteil, dass die Schwarz-weiss-Abstufungen direkt als Faktor verwendet werden können. Die Color-Ramp kann auch mit farbigen Inputs umgehen und diese umwandeln, allerdings werden die Farben dann anders über die Color-Ramp aufgespannt. Schlussendlich können allerdings beide Outputs verwendet werden.

::: column-margin
Viewer-Node zur Color-Ramp hinzufügen
:::

Innerhalb der Color-Ramp kann anschliessend der Noise zum Sternenhimmel umgewandelt werden. Um diese Prozesse zu verstehen, empfiehlt es sich, bei gedrückter Tastenkombination {{< kbd Ctrl >}} + {{< kbd Shift >}} die Color-Ramp auszuwählen, um den Viewer-Node zu öffnen und mit der Color-Ramp zu verbinden. Dadurch kann der Effekt der Color-Ramp im 3D-Viewport-Editor betrachtet werden.

::: column-margin
Schwarzanteil durch die Color-Ramp erhöhen
:::

Innerhalb der Color-Ramp werden nun die schwarz-weissen Abstufungen der Noise-Textur entlang der Farbachse aufgespannt. Schwarze Farben befinden sich am linken Ende der Farbachse und weisen den Faktor 0 auf, während weisse Farben am rechten Ende der Farbachse zu finden sind und den Faktor 1 aufweisen. Wenn nun der schwarze Farbmarker am linken Ende nach rechts verschoben wird, beispielsweise auf die Position 0.732, werden alle Schwarz-weiss-Abstufungen, welche für einen Wert unterhalb von 0.732 stehen, konstant schwarz gehalten. Die Werte rechts daneben, welche zwischen dem schwarzen und dem weissen Farbmarken liegen, werden graduell neu berechnet. Visuell hat dies die Folge, dass ein Grossteil der Noise-Textur nun schwarz geworden ist.

::: column-margin
Weissanteil durch die Color-Ramp erhöhen
:::

Damit nun vereinzelt weisse Punkte in der Noise-Textur erscheinen, muss der zweite, weisse Farbmarker am rechten Ende etwas nach links verschoben werden. Wird dieser beispielsweise auf die Position 0.795 gesetzt, werden alle Faktor-Werte der Noise-Textur, welche über 0.795 liegen, weiss eingefärbt. Durch diese Einstellung sollte sich nun ein schwarzer Himmel mit vereinzelten weissen Punkten ergeben. Dieser kann nun als Sternenhimmel verwendet werden, indem der Color-Output der Color-Ramp mit dem Color-Input des Background-Nodes verbunden wird. Durch einen Klick auf den Background-Node bei gedrückter Tastenkombination {{< kbd Ctrl >}} + {{< kbd Shift >}} wird der Viewer-Node zudem wieder geschlossen.

![Node-System, um einen prozeduralen Sternenhimmel als Welt zu erstellen.](Images/Chapter_35/.png){#fig-1_5 fig-align="left"}
