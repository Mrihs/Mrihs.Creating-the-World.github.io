---
title: "32. Der Wechsel von Eevee zu Cycles am Beispiel von Glas"
editor: visual
---

## Gläser in Eevee richtig darstellen lassen

::: column-margin
Beispiel mit Glas auf Tisch
:::

Das Arbeiten mit Glas als Material benötigt einige Anpassungen bei der Darstellung innerhalb der Einstellungen der aktuellen Render-Engine (Eevee). Die Datei «*Beispiel_Glas_Material*» wird nachfolgend verwendet, um diese Problematik aufzuzeigen. Innerhalb dieser Datei ist ein Glas auf einem Tisch dargestellt. Sämtliche Texturen und Materialien wurden bereits für die verschiedenen Objekte erstellt. Deshalb kann das Beispiel im Render-Shading-Modus betrachtet werden.

::: column-margin
Weitere Einstellungen benötigt, um Glasmaterialien zu verwenden
:::

Das Glas reflektiert seine Umwelt zu einem bestimmten Grad, allerdings wirkt die Umwelt stark verzogen. Dies liegt daran, dass die aktuell ausgewählte Render-Engine (Eevee) darauf ausgelegt ist, dass Inhalte möglichst schnell und idealerweise in Echtzeit gerendert werden. Hierfür müssen einige Abstriche gemacht werden. Ein solcher Abstrich ist nun bei diesem Glas sichtbar.

::: column-margin
Screen-Space-Reflections aktivieren
:::

Um möglichst schnell arbeiten zu können, ist bei Eevee standardmässig eine komplexere Berechnung von Reflexionen ausgeschaltet. Diese wird nun allerdings benötigt, damit das Glas realistischer erscheint. Um diese Option einzuschalten, muss im Properties-Editor der zweitoberste Reiter «*Render Properties*» geöffnet werden. Darin ist ein Reiter für die «*Screen Space Reflections*» aufzufinden, der allerdings deaktiviert ist. Dieser Reiter sollte aktiviert werden. Durch die Aktivierung dieses Reiters ist bereits ersichtlich, dass Reflexionen nun deutlicher wiedergeben werden. Zusätzlich sollte allerdings dieser Reiter geöffnet und «*Refraction*» aktiviert werden. Dadurch sollte nun auch das Fenster im Hintergrund lichtdurchlässig und die Aussenwelt sichtbar werden.

::: column-margin
Screen-Space-Refraction für ein Material aktivieren
:::

Im Glas selbst hat sich allerdings bislang noch keine Veränderung gezeigt. Dies liegt daran, dass in Eevee zusätzlich für jedes Material per Default die Einstellung zur komplexeren Berechnung von Reflexionen deaktiviert ist. Deshalb muss das Glas ausgewählt werden und der Material-Reiter im Properties-Editor geöffnet werden. Unter dem Reiter «*Settings*» können anschliessend weitere Einstellungen vorgenommen werden. Hier muss nun für das ausgewählte Material die Einstellung «*Screen Space Refraction*» aktiviert werden. Dadurch werden auch beim Glas, welches sich auf dem Tisch befindet, die Reflexionen durch das Glas korrekt berechnet.

::: column-margin
Zusammenfassung der Einstellungen, um Gläser in Eevee anzeigen zu lassen
:::

Um Gläser korrekt anzeigen zu lassen, sind somit folgende drei Einstellungen in Eevee nötig:

-   In den Render-Properties muss «*Screen Space Reflections*» aktiviert werden.
-   Im Reiter zu den Screen-Space-Reflections muss «*Refraction*» aktiviert werden.
-   In den Einstellungen zum Glas-Material muss zusätzlich «*Screen Space Refraction*» aktiviert werden.

::: column-margin
Glas-Parameter variieren
:::

Mithilfe dieser Vorbereitungen kann nun anhand dieses Beispiels betrachtet werden, welche Auswirkungen verschiedene IOR-, Transmission- und Transmission-Roughness-Werte mit sich bringen. Ein IOR von 1 führt beispielsweise dazu, dass das Glas praktisch unsichtbar erscheint. Durch eine Erhöhung der Transmission-Roughness wird das Glas wiederum etwas milchiger.

## Der Wechsel von Eevee zu Cycles

::: column-margin
Eevee vs. Cycles
:::

Wie bereits erwähnt, ist Eevee als Render-Engine darauf ausgerichtet, dass Bilder möglichst in Echtzeit erzeugt werden. Dies geschieht auf Kosten von realitätsgetreuen Darstellungen. Blender verfügt nebst Eevee noch über eine zweite Render-Engine namens Cycles. Diese Engine benötigt deutlich mehr Leistung und braucht dadurch auch länger, um die Darstellung von Inhalten zu berechnen. Dabei hängt es stark von den Kapazitäten des jeweiligen Rechners ab, wie lange diese Berechnung 
dauert. Zusätzlich gibt es noch die Render-Engine «Workbench». Diese ist sehr rudimentär aufgebaut und ist nicht für realistische Darstellungen geeignet.

::: column-margin
Render-Engine wechseln
:::

Die Render-Engine lässt sich im Properties-Editor unter dem Reiter für die Render-Properties einstellen. Zuoberst wird dabei unter «*Render Engine*» ein Dropdown-Menü dargestellt, in dem zwischen den verschiedenen Engines gewechselt werden kann. Durch die Auswahl von Cycles wird 
das Bild anschliessend mittels dieser Engine berechnet.

::: column-margin
Arbeitsweise von Cycles
:::

Cycles funktioniert etwas anders als Eevee. Während Eevee ein finales Bild erzeugt hat, erstellt Cycles eine Vielzahl von Bildern (sogenannte Samples) und überlappt diese zu einem finalen Bild. Dies führt zu realistischeren Darstellungen, aber auch dazu, dass es Fehler in der Abbildung gibt. Dies zeigt sich in der Form von weissem Noise, welcher über das Bild gestreut wird. Die einzelnen Punkte dieses Noises werden als Fireflies bezeichnet.

::: column-margin
Fireflies entfernen
:::

In Blender gibt es eine eingebaute Option, damit die Fireflies entfernt werden. Diese ist in den Render-Properties unter dem Reiter «*Sampling*» unter dem darunterliegenden Reiter «*Denoising*» zu finden. Dort kann die Einstellung «*Viewport*» aktiviert werden. Dadurch entfernt Blender automatisch die Fireflies im 3D-Viewport-Editor. Wird zudem die Option «*Render*» ausgewählt, geschieht dies auch bei finalen Renders.

::: column-margin
Pausieren des Renderns
:::

Durch den Wechsel der Render-Engine erscheint im 3D-Viewport-Editor in der rechten oberen Ecke eine zusätzliche Schaltfläche. Diese gibt jeweils an, ob gerade gerendert wird oder nicht. Sollte das Bild einmal einfrieren und nicht neu gerendert werden, sollte anhand dieser Schaltfläche überprüft werden, ob das Rendern gerade pausiert wurde.

## Rendern mit der GPU in Cycles 

::: column-margin
Prozessorleistung benötigt für Cycles
:::

Bei der Erstellung der 3D-Objekte wird jeweils der Prozessor des Computers verwendet. Die Leistung, welcher dieser Prozessor aufweist, hängt dabei vom jeweiligen Modell ab. Dadurch kann es vorkommen, dass manche Computer für komplexere Projekte weniger geeignet sind. Durch den Wechsel der Render-Engine von Eevee auf Cycles wird die Rechenleistung des Prozessors zunehmend bedeutsamer, da in Cycles bereits die Vorschau im 3D-Viewport-Editor im Render-Shading-Modus vom Prozessor abhängt. Etwas schneller verläuft hingegen die Darstellung im Material-Preview-Shading-Modus. Dies liegt daran, dass dieser Modus auf Eevee zurückgreift, selbst wenn Cycles als Render-Engine ausgewählt ist.

::: column-margin
GPU kann zum Rendern in Cycles verwendet werden
:::

Auf einigen Computern ist es möglich, dass die Grafikkarte verwendet wird, um die nötige Renderleistung zu erzielen. Dies bringt allerdings nur einen Vorteil mit sich, wenn die Grafikkarte die entsprechende Leistung aufbringen kann. Zudem hängt dies auch von Eigenschaften des Gerätes und des Betriebssystems ab. Auf Apple-Geräten steht diese Option beispielsweise nicht zur Verfügung.

::: column-margin
Cycles-Render-Devices
:::

Windows-Nutzer können unter «*Edit | Preferences*» im Reiter «*System*» nachverfolgen, ob das Ansteuern der Grafikkarte möglich ist. Unter dem Bereich «*Cycles Render Devices*» sind jeweils vier Tabs aufzufinden. Für Mac-Nutzer wird dieser Reiter gar nicht angezeigt. In den Reitern «*CUDA*», «*OptiX*» und «*OpenCL*» wird jeweils die Grafikkarte nebst dem Prozessor aufgeführt, insofern diese durch die entsprechenden Optionen anwählbar sind. Sollte die Grafikkarte dort auffindbar sein, kann diese angewählt werden. Von nun an kann die Grafikkarte (GPU) statt des Prozessors (CPU) für das Rendern in Cycles verwendet werden.

::: column-margin
GPU zum Rendern aktivieren
:::

Damit die GPU auch wirklich beim Rendern verwendet wird, muss im Render-Properties-Reiter des Properties-Editors die Einstellung «*Device*» von der Auswahl «*CPU*» auf «*GPU Compute*» umgestellt werden. Die erste gerenderte Darstellung mittels der GPU wird allerdings eine Weile benötigen. Blender nimmt 
im Hintergrund einige Anpassungen vor, um mit der GPU zu arbeiten. Dadurch erscheint es, als ob das Unterfangen nicht funktioniert. Sollten die Viewport
Overlays aktiviert sein, wird allerdings mittels eines Textes in der linken oberen Hälfte erläutert, dass aktuell die Render-Kerne geladen werden und dies einige 
Minuten in Anspruch nehmen wird.


:::::: tippbox
:::: tippbox-header
::: tippbox-icon
:::

Weiterführende Informationen
::::

::: tippbox-body
Unterschiedliche GPUs und CPUs benötigen in Cycles unterschiedlich lange zum Rendern von Szenen. Auf der Website <https://opendata.blender.org/> sind Benchmarks für verschiedene Prozessoren, Grafikkarten und Betriebssysteme ersichtlich. So kann verglichen werden, wie lange verschiedene Hardware-Optionen zum Rendern verschiedener Beispielszenen benötigen. Zudem kann auch eine Applikation heruntergeladen werden, welche einen Benchmark auf dem eigenen Rechner durchführt.
:::
::::::

::: column-margin
GPU Compute ohne entsprechende Devices auswählen bringt nichts
:::

Die Option «*GPU Compute*» kann auch von Nutzern ohne die entsprechende Hardware ausgewählt werden, allerdings wird sich kein Effekt zeigen. Dies ist jeweils daran zu erkennen, dass das Dropdown-Menü mit der Auswahl von «*GPU Compute*» dann grau hinterlegt wird.