---
format:
  pdf:
    documentclass: book
    lang: de
    title-block: none
    toc: false
    number-sections: true
    number-depth: 2
    output-file: "creating_the_world_script"
    output-ext:  "pdf"
    header-includes:
    - \renewcommand{\familydefault}{\sfdefault}
    - \newcommand{\kbd}[1]{\fbox{\texttt{#1}}}
    include-in-header:
    - "assets/styles/styles.tex"
editor: source
---


::: {=latex}
\begin{titlepage}
  \thispagestyle{empty}

  % Background Image
  \AddToShipoutPictureBG*{%
    \put(0,0){%
      \parbox[b][\paperheight][c]{\paperwidth}{%
        \includegraphics[width=\paperwidth,height=\paperheight]{icons/Title_Image.png}%
      }%
    }%
  }
  
  % Titlebox
  \begin{tikzpicture}[remember picture, overlay]
    \node[anchor=north west] at ([xshift=2.3cm,yshift=-9.3cm] current page.north west) {
      \begin{tikzpicture}
        % Box
        \shade[bottom color=orangeBottom, top color=orangeTop, opacity=0.45]
          (0,0) rectangle (16.51cm,3.91cm);
        % Text
        \node[anchor=west, text=white, align=left, font=\sffamily\bfseries\fontsize{24}{24}\selectfont]
          at (1.25cm,1.955cm) {
            Creating the World:\\
            Grafik, Design und Animation in 3D
          };
      \end{tikzpicture}
    };

  
    % Author-Box
    \node[anchor=north west] at ([xshift=2.3cm,yshift=-19.61cm] current page.north west) {
      \begin{tikzpicture}
        % Box
        \filldraw[fill=blue!90!cyan, opacity=0.35, draw=none]
          (0,0) rectangle (16.51cm,3.91cm);
        % Text
        \node[anchor=east, text=white, align=right, font=\sffamily\bfseries\fontsize{16}{18}\selectfont]
          at (16.31cm,1.955cm) {
            Prof.\ Dr.\ Fred Mast\\
            Dr.\ Michael Rihs\\
            M.\ Sc.\ Flurina Brodwolf\\
            M.\ Sc.\ Romina Schmid
          };
      \end{tikzpicture}
    };

  \end{tikzpicture}

  \newpage
\end{titlepage}
:::




::: {=latex}
\clearpage
\thispagestyle{empty}

\chapter*{Creating the World:\protect\\Grafik, Design \& Animation}\

\vspace{1em}

\textbf{Version:} 2025\
\textbf{Erstversion:} 2021\

\textbf{Autoren:}\
Michael Rihs\textsuperscript{1*}\
Flurina L. Brodwolf\textsuperscript{1}\
Romina Schmid\textsuperscript{1}\
Fred W. Mast\textsuperscript{1}\
\textsuperscript{1}Abteilung für kognitive Psychologie, Institut für Psychologie, Universität Bern

\vspace{1em}
\section*{Kontakt}

\begin{tabular}{@{}l}
\textbf{*Dr. Michael Rihs}\\
Institut für Psychologie \\
Fabrikstrasse 8 \\
3012 Bern \\
{michael.rihs@unibe.ch} \\
\end{tabular}


\vspace{1em}
\section*{Erstellung der Website}

Die Unterlagen zu diesem Buch sind auf der dazugehörigen Website ([https://mrihs.github.io/Mrihs.Creating-the-World.github.io/](https://mrihs.github.io/Mrihs.Creating-the-World.github.io/)) zu finden. Die Website wurde mit Hilfe von \href{https://posit.co/download/rstudio-desktop/}{RStudio/Posit} und \href{https://quarto.org}{Quarto} entwickelt. Die Website, sowie die Unterrichts-Unterlagen sind im zur Website gehörigen GitHub Repository ([https://github.com/Mrihs/Mrihs.Creating-the-World.github.io](https://github.com/Mrihs/Mrihs.Creating-the-World.github.io)) hinterlegt

\vspace{1em}
\section*{Lizenz}

Dieses Buch und die dazugehörige Website stellt eine offene Bildungsressource (Open Educational Resource) dar. Sie darf frei verwendet, bearbeitet und weitergegeben werden, sofern die Urheber namentlich genannt und die Inhalte unter der Lizenz \href{https://creativecommons.org/licenses/by-sa/4.0/deed.de}{CC BY-SA 4.0} weitergegeben werden.

Abbildungen der Benutzeroberfläche von \href{https://www.blender.org}{Blender} wurden als Screenshots erstellt und unterliegen der Lizenzbedingungen von Blender.

\vspace{1em}
\section*{Danksagung}

Besonderer Dank geht an Rahel Steuri und Rebekka Borer, welche bei der Adaption des Kurses im Jahre 2022 beteiligt waren. Weiterer Dank geht an Aurégane Dévaud, welche die Erstellung der Website zum Buch unterstützt hat.
:::





::: {=latex}
\clearpage
\tableofcontents
\clearpage
:::





::: {=latex}
\chapter*{Vorwort}\

\markboth{Vorwort}{}

Dieses Buch wurde für die Lehrveranstaltung "Creating the World: Grafik, Design & Animation (inkl. Einführung in die 3D Modellierung mit Blender) entwickelt. Der Kurs wurde erstmals im Jahr 2021 als Methodenkurs für Masterstudierende der philosophisch-humanwissenschaftlichen Fakultät der Universität angeboten. Die Lehrveranstaltung wurde durch das Förderprogramm "Der Mensch in der digitalen Transformation" von der philosophisch-humanwissenschaftlichen Fakultät gefördert. In der Veranstaltung wurde der Prozess der Erstellung virtueller 3D-Objekte, -Welten und Animationen vor dem Hintergrund aktueller Forschung erläutert und durch praktische Beispiele veranschaulicht. Die Studierenden erlernten die Inhalte praxisnah mithilfe der frei zugänglichen Software Blender und erhielten dabei fundierte Einblicke in die grundlegenden Merkmale von 3D-Objekten, -Welten und Animationen.

\section*{Hinweise zur Verwendung von Boxen}
Im Verlaufe des Buches werden verschiedene Boxen verwendet, um wichtige Informationen hervorzuheben. Die Boxen haben folgende Bedeutung

\begin{tipp}{Tipps}
Diese Box kennzeichnet nützliche Tipps.
\vspace{2\baselineskip}
\end{tipp}

\begin{remember}{Merke...}
Diese Box kennzeichnet besonders wichtige Inhalte, die nicht vergessen werden sollten.
\vspace{2\baselineskip}
\end{remember}

\begin{exercise}{Übungen}
Diese Box kennzeichnet praktische Übungen.
\vspace{2\baselineskip}
\vspace{2\baselineskip}
\end{exercise}


\section*{Rückmeldung}
Haben Sie Rückmeldungen, Anregungen oder Fehler entdeckt? Diese können gerne an Dr. Michael Rihs (michael.rihs@unibe.ch) zurückgemeldet werden.
:::





```{r}
#| echo: false
#| eval: false
##### To-Do
## Layout
# One sided layout

## Margins
# Adjust placing

## Images
# Adjust Size
# Adjust Placing

## Boxes
# Adjust Boxes

## Header
# Booktitle in Header (always left)
# Orange box across whole page (until page ende

## Footer
# Chaptertitle on the left
# Page number on the right
# Maybe add color-box around
```


```{r}
#| echo: false
#| eval: true
# Define process_qmd function 
process_qmd <- function(file, fpath_in = "", fpath_out = "") {

  # Prevent stop by invalid pathes or NA
  if (is.null(file) || is.na(file) || !nzchar(file) || !file.exists(file)) {
    return("")
  }

  # Read file
  doc <- readLines(file)
    
  
  
   
  ### Get YAML-Blocks
  # Find the line which ends the YAML-blcok (Second instance of "---")
  end_yaml <- which(doc == "---")[2]
  
  # Extract the YAML-block
  yaml_block <- doc[1:end_yaml]
  
  # Search for the line which includes the title
  title_line <- grep("^title:", yaml_block, value = TRUE)
  
  # If the title has at least one character...
  if (length(title_line) > 0) {
    # remove the "title:" tag as well as special characters
    title <- sub("^title:\\s*\"?(.*?)\"?\\s*$", "\\1", title_line)
  } 
  # Set an empty title if the title is missing
  else {title <- ""}
  
  # Save all lines expect the YAML-block
  out_doc <- doc[(end_yaml+1):length(doc)]
  
  # Replace the original path if needed
  if (fpath_in != fpath_out) {
    out_doc <- stringr::str_replace_all(out_doc, fpath_in, fpath_out)
  }
  
  # Replace Instances of "Images/Chapter_" by "Chapters/Images/Chapter_" to get the correct path
  out_doc <- stringr::str_replace_all(out_doc, "Images/Chapter_", "Chapters/Images/Chapter_")
    
  
  
   

  ### Remove custom "downloadbox" blocks
  # Lock for Lines which start a download-box
  start_db <- grep("^:::::: downloadbox", out_doc)
  # Find the lines which end the downloadbox
  end_db <- grep("^::::::$", out_doc)
  if (length(start_db) > 0 && length(end_db) > 0) {
    # Create a logical vector to keep or discard lines
    keep <- rep(TRUE, length(out_doc))
    # For every sequence
    for (i in seq_along(start_db)) {
      s <- start_db[i]
      # Find the first end marker that comes *after* this start
      e <- end_db[end_db > s][1]
      if (!is.na(e)) {
        keep[s:e] <- FALSE
      }
    }
    out_doc <- out_doc[keep]
  }
  
  
  
   
  
  ### Replace "column-margin" blocks by \marginnote{...}
  # Lock for Lines which start a block
  cm_start <- grep("^:::\\s*column-margin", out_doc)
  
  # Loop through block
  if(length(cm_start) > 0){
    for(i in rev(seq_along(cm_start))) {
      s <- cm_start[i]
      # Find end of the block (:::)
      e_candidates <- which(out_doc[(s+1):length(out_doc)] == ":::")
      # Skip if no end is found
      if(length(e_candidates) == 0) next
      e <- s + e_candidates[1]
      
      # Get content of margin-block
      content <- paste(out_doc[(s+1):(e-1)], collapse = " ")
      
      # Replace block with \marginnote{...}
      replacement <- paste0("\\marginnote{", content, "}")
      
      # Replace block in document
      out_doc <- c(out_doc[1:(s-1)], replacement, out_doc[(e+1):length(out_doc)])
    }
  }
  
  
  
   
  ### Replace kbd-Tags
  # Find kbd-Tags ("{{< kbd ... >}}")
  kbd_pattern <- "\\{\\{<\\s*kbd\\s+([^>]+)\\s*>\\}\\}"
  
  # For all kbd-Tags
  out_doc <- sapply(out_doc, function(line) {
    stringr::str_replace_all(line, kbd_pattern, function(match) {
      # Extract content of kbd-Tags
      key_text <- stringr::str_match(match, kbd_pattern)[,2]
      # Remove spaces before and after Tags
      keys <- unlist(strsplit(trimws(key_text), "\\s+"))
      # Combine multiple Tast with "+"
      joined_keys <- paste(keys, collapse = " + ")
      # Create LaTex-Code("\kbd{...}")
      paste0("\\kbd{", joined_keys, "}")
    })
  }, USE.NAMES = FALSE)
    
  
  
   
  ### Replace tippboxes 
  # Finde Tippobes
  tipp_start <- grep("^::::::\\s*tippbox", out_doc)
  
  # If tippbox is long enough
  if (length(tipp_start) > 0) {
    # For all tippboxes
    for (i in rev(seq_along(tipp_start))) {
      start_idx <- tipp_start[i]
      # Find the last line ("::::::")
      end_candidates <- grep("^::::::\\s*$", out_doc[start_idx:length(out_doc)])
      if (length(end_candidates) > 0) {
        end_idx <- start_idx + end_candidates[1] - 1
      } else {
        # Skip if no end is found
        next
      }
      
      # Extract block
      block <- out_doc[start_idx:end_idx]
      # Remove first and last line
      block_inner <- block[-c(1, length(block))]
      
      # Initialize Header and Body-Strings
      header <- ""
      body <- ""
      
      ## Define Tippbox-Header
      header_start_idx <- grep("^::::\\s*tippbox-header", block_inner)
      if (length(header_start_idx) > 0) {
        # Set end of header-Section ("::::")
        header_end_candidates <- grep("^::::\\s*$", block_inner[(header_start_idx[1] + 1):length(block_inner)])
        # If header is long enough
        if (length(header_end_candidates) > 0) {
          # Define line at which header ends
          header_end_idx <- header_start_idx[1] + header_end_candidates[1]
          header_block <- block_inner[(header_start_idx[1] + 1):(header_end_idx - 1)]
          
          # Remove cion-Blocks
          icon_start <- grep("^:::\\s*tippbox-icon", header_block)
          if (length(icon_start) > 0) {
            icon_end_candidates <- grep("^:::\\s*$", header_block[(icon_start[1] + 1):length(header_block)])
            if (length(icon_end_candidates) > 0) {
              icon_end <- icon_start[1] + icon_end_candidates[1]
              header_block <- header_block[-(icon_start[1]:icon_end)]
            }
          }
          # paste header
          header <- paste(header_block, collapse = " ")
          header <- trimws(header)
        }
      }
      
      ## Define Tippbox-body
      body_start_idx <- grep("^:::\\s*tippbox-body", block_inner)
      if (length(body_start_idx) > 0) {
        body_end_candidates <- grep("^:::\\s*$", block_inner[(body_start_idx[1] + 1):length(block_inner)])
        if (length(body_end_candidates) > 0) {
          body_end_idx <- body_start_idx[1] + body_end_candidates[1]
          body_block <- block_inner[(body_start_idx[1] + 1):(body_end_idx - 1)]
          body <- paste(body_block, collapse = " ")
          body <- trimws(body)
        }
      }
      
      # Define replacement-Text
      replacement <- paste0("\\begin{tipp}{", header, "}\n", body, "\n\\end{tipp}")
      
      # Replace block in document
      out_doc <- c(out_doc[1:(start_idx - 1)], replacement, out_doc[(end_idx + 1):length(out_doc)])
    }
  }
      
  
  
   
  ### Set title
  # If a title was found, add the title in combination with a markdown-header (#) at the beginning
  if (title != "") {
    out_doc <- c(paste0("# ", title), "", out_doc)
  }
  
  # Use the modified text as child-document
  res <- knitr::knit_child(text = out_doc, quiet = TRUE, options = list(eval = FALSE, echo = TRUE))
      
  
  
   
  ### Return the text
  return(res)
}

### Credit for the foundation of this function goes to royal-statistical-society for their function in the datavisguide project 
### https://github.com/royal-statistical-society/datavisguide/blob/main/_make_pdf.qmd
```




```{r}
#| output: asis
#| echo: false
#| eval: true
#| message: false
# List all data in the Chapter-Folder which start with "Chapter_" and have a ".qmd" suffix
files <- list.files("Chapters/", pattern = "^Chapter_.*\\.qmd$", full.names = TRUE)
  
# Extract the number of chapters from the filenames as integers
numbers <- as.integer(stringr::str_extract(basename(files), "(?<=Chapter_)[0-9]+"))
  
# Sort the chapter-files based on the extracted numbers
files <- files[order(numbers)]

# For all chapter-files
for (fileindex in 1:length(files)){
  # Get the current chapter-file
  current_file <- files[fileindex]
  
  # Process the current chapter
  C1 <- process_qmd(current_file)
  
  # Print the current chapter
  cat(unlist(C1), sep = '\n')
}
```